
CustomPotential = Template("CustomPotential_AngularKineticEnergy_Spherical", "spherical.cpp")
CustomPotential("2")

CustomPotential = Template("SphericalKineticEnergyEvaluator", "spherical.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserLength_Z", "sphericallength.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserLength_X", "sphericallength.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserLength_Y", "sphericallength.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserVelocity", "sphericalvelocity.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserVelocity_X", "sphericalvelocity_x.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserVelocity_Y", "sphericalvelocity_y.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserVelocityDerivativeR", "sphericalvelocity.cpp")
CustomPotential("2")


CustomPotential = Template("CustomPotential_LaserVelocityDerivativeR_Y", "sphericalvelocity_y.cpp")
CustomPotential("2")

CustomPotential = Template("CustomPotential_LaserVelocityDerivativeR_X", "sphericalvelocity_x.cpp")
CustomPotential("2")

#declare potential evaluator for cartesian-like potentials
PotentialEvaluator = Template("DynamicPotentialEvaluator", "potential.cpp")

PotentialEvaluator("KineticEnergyPotential<2> 2","KineticEnergyPotential_2")
PotentialEvaluator("CoulombPotential<2> 2","CoulombPotential_2")
PotentialEvaluator("SingleActiveElectronPotential<2> 2","SingleActiveElectronPotential_2")
PotentialEvaluator("OverlapPotential<2> 2","OverlapPotential_2")
PotentialEvaluator("ComplexAbsorbingPotential<2> 2","ComplexAbsorbingPotential_2")
PotentialEvaluator("ManolopoulosAbsorber<2> 2","ManolopoulosAbsorber_2")

#this is used to get at GetPotentialValue from python
CustomPotential = Template("ComplexAbsorbingPotential", "potential.cpp")
CustomPotential("2", "ComplexAbsorbingPotential_custom_2")

#Diatomic Coulomb potential
DiatomicPotential =  Template("DiatomicCoulombPotential", "diatomicpotential.cpp")
DiatomicPotential("2")
